[tool.poetry]
name = "tap-klaviyo"
version = "0.0.1"
description = "`tap-klaviyo` is a Singer tap for Klaviyo, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Brooklyn Data"]
keywords = [
    "ELT",
    "Klaviyo",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.8"
fs-s3fs = { version = "^1.1.1", optional = true }
requests = ">=2,<3"
singer-sdk = { version="~0.37.0" }

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
singer-sdk = { version="~0.37.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.11"
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
tap-klaviyo = 'tap_klaviyo.tap:TapKlaviyo.cli'

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
ignore = ["ANN101", "DJ", "PD", "D102", "COM812", "ISC001", "FIX002"]
select = ["ALL"]

[tool.ruff.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.flake8-import-conventions.extend-aliases]
typing = "t"

[tool.ruff.per-file-ignores]
"tap_klaviyo/streams.py" = [
    "RUF012",  # mutable-class-default
]
"tests/*" = ["ANN201"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:Fields in transformed catalog but not in records:UserWarning",
    "ignore:No records were available to test:UserWarning",
    "ignore:No records returned in stream 'campaigns':UserWarning",
    "ignore:No records returned in stream 'events':UserWarning",
    "ignore:No records returned in stream 'flows':UserWarning",
    "ignore:No records returned in stream 'listperson':UserWarning",
    "ignore:No records returned in stream 'lists':UserWarning",
    "ignore:No records returned in stream 'profiles':UserWarning",
    "ignore:No records returned in stream 'templates':UserWarning",
]
