[tool.poetry]
name = "tap-klaviyo"
version = "0.0.1"
description = "`tap-klaviyo` is a Singer tap for Klaviyo, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Brooklyn Data"]
keywords = [
    "ELT",
    "Klaviyo",
]
license = "Apache 2.0"

[tool.poetry.dependencies]
python = "<3.12,>=3.7.1"
fs-s3fs = { version = "^1.1.1", optional = true }
requests = "^2.31.0"
singer-sdk = { version="^0.26.0" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
singer-sdk = { version="^0.26.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "tap_klaviyo"

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-klaviyo = 'tap_klaviyo.tap:TapKlaviyo.cli'

[tool.black]
max-line-length = 100

[tool.ruff]
ignore = ["ANN101", "DJ", "PD", "D102"]
line-length = 100
select = ["ALL"]
target-version = "py37"

[tool.ruff.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.flake8-import-conventions.extend-aliases]
typing = "t"

[tool.ruff.per-file-ignores]
"tap_klaviyo/streams.py" = [
    "RUF012",  # mutable-class-default
]
"tests/*" = ["ANN201"]

[tool.ruff.pydocstyle]
convention = "google"
